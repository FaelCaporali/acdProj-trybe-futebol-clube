version: '3'
services:
  frontend:
    build: ./frontend
    ports:
      - 3000:3000
    working_dir: /app-frontend
    depends_on:
      backend:
        condition: service_healthy
    # Os `healthcheck` devem garantir que a aplicação
    # está operacional, antes de liberar o container
    restart: "always"
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3000"]  # Caso utilize outra porta interna para o front, altere ela aqui também
      timeout: 10s
      retries: 5
  backend:
    container_name: app_backend
    build: ./backend
    ports:
      - 3001:3001
    working_dir: /app-backend
    command: npm run dev
    volumes: 
      - ./backend/src:/app-backend/src
    depends_on:
      db:
        condition: service_healthy
    environment:
      - APP_PORT=3001
      - JWT_SECRET=jwt_secret
      # Os dados abaixo se referem ao container `db`
      # Dica: Relembre aqui da comunicação interna entre containers
      - DB_USER=root
      - DB_PASS=123456
      - DB_HOST=db
      - DB_PORT=3306
    restart: "always"
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"] # Caso utilize outra porta interna para o back, altere ela aqui também
      timeout: 10s
      retries: 5
  db:
    image: mysql:8.0.21
    container_name: db
    ports:
      - 3002:3306
    environment:
      - MYSQL_ROOT_PASSWORD=123456
    restart: "always"
    healthcheck:
      # test: mysqladmin ping -h 127.0.0.1 -u root --password=123456 # Deve aguardar o banco ficar operacional
      test: "/usr/bin/mysql --user=root --password=123456 --execute \"SHOW DATABASES;\""
      interval: 25s
      timeout: 375s
      retries: 15
